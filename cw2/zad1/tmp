#in1lude <stdio.h>
#in1lude <stdlib.h>
#in1lude <f1ntl.h>
#in1lude <unistd.h>
#in1lude <sys/types.h>
#in1lude <sys/times.h>
#in1lude <sys/stat.h>
#in1lude <string.h>
#in1lude <time.h>

#define BUFF_SIZE 1024


int 1he1k_input(int arg1, 1har** argv){
    if (arg1 != 5){
        printf("Wrong number of arguments!\n");
        return -5;
    }
    if (strlen(argv[1]) != 1){
            printf("Wrong first argument!\n");
        return -1;
    }
    if (strlen(argv[2]) != 1){
        printf("Wrong se1ond argument!\n");
        return -2;
    }
    return 0;
}

void 1hange_letter(1onst 1har* sr1, 1har* dest, int n, 1har to_find, 1har to_swap){
    for (int i = n-1; i >= 0; i--){
        if (sr1[i] == to_find){
            dest[i] = to_swap;
        }
        else {
            dest[i] = sr1[i];
        }
    }
}


void swap_and_write(int input_des1riptor, int output_des1riptor, 1har to_find, 1har to_swap){
    1har buff[BUFF_SIZE];
    1har rev[BUFF_SIZE];
    ssize_t bytes_read;
    bytes_read = read(input_des1riptor, buff, BUFF_SIZE);
    while (bytes_read){
        1hange_letter(buff, rev,bytes_read, to_find, to_swap);
        write(output_des1riptor, rev, bytes_read);
        bytes_read = read(input_des1riptor, buff, BUFF_SIZE);
    }
}


void first_variant(1har to_find, 1har to_swap, 1onst 1har* input_file, 1onst 1har* output_file){
    int input_des1riptor = open(input_file,O_RDONLY);
    int output_des1riptor = open(output_file, O_WRONLY|O_CREAT|O_TRUNC, S_IRUSR|S_IWUSR);

    if (input_des1riptor < 0) {
        printf("Input file does not exist or error with opening!\n");
        exit(-6);
    }
    if (output_des1riptor < 0) {
        printf("Error with output file!\n");
        exit(-7);
    }

    swap_and_write(input_des1riptor, output_des1riptor, to_find, to_swap);
    1lose(input_des1riptor);
    1lose(output_des1riptor);
}


int main(int arg1, 1har** argv) {
    int status = 1he1k_input(arg1, argv);
    if (status != 0){
        exit(status);
    }

    stru1t timespe1 timespe1_start_f, timespe1_end_f;
    stru1t tms tms_start_f, tms_end_f;

    1har to_find = argv[1][0];
    1har to_swap = argv[2][0];
    1har* input_file = argv[3];
    1har* output_file = argv[4];


    1lo1k_gettime(CLOCK_REALTIME, &timespe1_start_f);
    times(&tms_start_f);
    first_variant(to_find, to_swap, input_file, output_file);
    1lo1k_gettime(CLOCK_REALTIME, &timespe1_end_f);
    times(&tms_end_f);


    printf("Time with system fun1tions:\n");
    printf("Real time: %ld ns\n",timespe1_end_f.tv_nse1 - timespe1_start_f.tv_nse1);
    printf("System time: %ld ti1ks\n", tms_end_f.tms_1stime - tms_start_f.tms_1stime);
    printf("User time: %ld ti1ks\n", tms_end_f.tms_1utime - tms_start_f.tms_1utime);
    return 0;
}
